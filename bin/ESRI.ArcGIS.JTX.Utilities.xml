<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ESRI.ArcGIS.JTX.Utilities</name>
    </assembly>
    <members>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.JTXUtilities">
            <summary>
            Static class containing generic utility methods
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.RegisterJTXCustomStep(System.String)">
            <summary>
            Registers a JTX custom step with COM (CLSID and Component Category)
            </summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.RegisterSpatialNotifierEditor(System.String)">
            <summary>Registers a Spatial Notifier editor with COM (CLSID and Component Category)</summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.RegisterSpatialNotifier(System.String)">
            <summary>Registers a Spatial Notifier with COM (CLSID and Component Category)</summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.UnregisterJTXCustomStep(System.String)">
            <summary>
            Unregisters a JTX custom step from the registry
            </summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.UnregisterSpatialNotifierEditor(System.String)">
            <summary>
            Unregisters a spatial notifier editor from the registry
            </summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.UnregisterSpatialNotifier(System.String)">
            <summary>
            Unregisters a spatial notifier from the registry
            </summary>
            <param name="strRegKey">Registry key generated by the .NET interop</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXCATIDString(ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType)">
            <summary>
            Returns the COM component category ID for various JTX component types
            </summary>
            <param name="eCATID">Enumeration of the component category to retrieve</param>
            <returns>The GUID of the COM category</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXInstallDirectory">
            <summary>
            Returns the file system directory where JTX is installed
            </summary>
            <returns>The directory where Workflow Manager is installed</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXConfigFilePath">
            <summary>
            Returns the path to the JTXUIConfig.xml file
            </summary>
            <returns>The path of jtxuiconfig.xml</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXConnectionDirectory">
            <summary>
            Returns the file system directory where the JTX database connection files are stored
            </summary>
            <returns>The directory containing the JTX connection files</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXJobsDirectory">
            <summary>
            Returns the file system directory where the JTX jobs information are stored
            </summary>
            <returns>The directory where Job MXDs are stored.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXPackagesDirectory">
            <summary>
            Returns the file system directory where the JTX jobs information are stored
            </summary>
            <returns>The directory where Job MXDs are stored.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.SaveJobMXD(System.Int32)">
            <summary>
            Extracts a job's MXD from the database and writes it to disk
            </summary>
            <param name="jobID">The ID of the job to retrieve the MXD from</param>
            <returns>The path to the MXD on disk</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.SaveJobMXD(ESRI.ArcGIS.JTX.IJTXDatabase,System.Int32)">
            <summary>
            Extracts a job's MXD from the database and writes it to disk
            </summary>
            <param name="ipDatabase">The repository containing the job</param>
            <param name="jobID">The ID of the job to retrieve the MXD from</param>
            <returns>The path to the MXD on disk</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.AddAttachmentToJob(System.Int32,System.String,ESRI.ArcGIS.JTX.jtxFileStorageType)">
            <summary>
            Adds an attachment from disk to a job in the database
            </summary>
            <param name="jobID">ID of the job to add the attachment to</param>
            <param name="strFile">Path of the file on disk</param>
            <param name="eStorageType">Type of storage in the database</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.AddAttachmentToJob(ESRI.ArcGIS.JTX.IJTXDatabase,System.Int32,System.String,ESRI.ArcGIS.JTX.jtxFileStorageType)">
            <summary>
            Adds an attachment from disk to a job in the database
            </summary>
            <param name="ipDatabase">Database to add the attachment in</param>
            <param name="jobID">ID of the job to add the attachment to</param>
            <param name="strFile">Path of the file on disk</param>
            <param name="eStorageType">Type of storage in the database</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.SendNotification(System.String,ESRI.ArcGIS.JTX.IJTXDatabase,ESRI.ArcGIS.JTX.IJTXJob,ESRI.ArcGIS.esriSystem.IPropertySet)">
            <summary>
            Sends a JTX notification
            </summary>
            <param name="strType">Type of notification to broadcast</param>
            <param name="ipDatabase">Active JTX database repository instance</param>
            <param name="ipJob">Job object to send the notification from</param>
            <param name="ipOverrides">Notification overrides</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JobTypeStateToString(ESRI.ArcGIS.JTX.jtxJobTypeState)">
            <summary>
            Converts the job type state enumeration into a string equivalent
            </summary>
            <param name="eJobTypeState"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JobTypeStateFromString(System.String)">
            <summary>
            Converts a string representing a job type state into the JTX
            enumeration equivalent
            </summary>
            <param name="strState"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.MakeStringXMLSafe(System.Text.StringBuilder)">
            <summary>
            Make the input string buffer safe for the XML parsers that JTX uses 
            to import jxl configuration files
            </summary>
            <param name="strXML"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetXMLSafeString(System.Text.StringBuilder,System.IO.TextReader)">
            <summary>
            Get an XML safe (MSXML DOM safe) string out of the pTextReader.  
            </summary>
            <param name="strXMLBuilder">StringBuilder that will contain the output string</param>
            <param name="pTextReader">TextReader that contains the input data</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GenerateDBMSDate(ESRI.ArcGIS.Geodatabase.IWorkspace,System.DateTime)">
            <summary>
            Format a date in the default format specific to the database
            </summary>
            <param name="ipWorkspace">The IWorkspace connection to the database to format the date for</param>
            <param name="dtValue">The DateTime to format</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GenerateDateString(ESRI.ArcGIS.Geodatabase.IWorkspace,System.String,System.Boolean)">
            <summary>
            Parse a Date string that is returned by a specified database into a DateTime object 
            </summary>
            <param name="ipWorkspace">The IWorkspace connection to the database the date is from</param>
            <param name="strDBMSDateTime">The date string</param>
            <param name="bFullFormat">A boolean indicating if should do a full database format, or trim the string</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetShowInfragisticsCustomize">
            <summary>
            Returns a value indicating whether the Infragistic toolbar controls should show the customize option
            </summary>
            <remarks>This is determined by HKEY_LOCAL_MACHINE\</remarks>
            <returns>Boolean indicating whether the option is shown</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.UpgradeTableField(ESRI.ArcGIS.Geodatabase.IWorkspace,ESRI.ArcGIS.Geodatabase.ITable,ESRI.ArcGIS.Geodatabase.IField,ESRI.ArcGIS.Geodatabase.IField,System.Boolean)">
            <summary>
            Upgrades a field in a table to have a new field definition
            </summary>
            <param name="ipWorkspace">The workspace containing the table</param>
            <param name="ipTable">The table to upgrade</param>
            <param name="ipExpectedField">The new field definition</param>
            <param name="ipExistingField">The old field to upgrade</param>
            <param name="bReportErrors">Flag indicating whether errors will be displayed to the user</param>
            <returns>A boolean indicating whether the field was successfully upgraded</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.UpgradeTable(ESRI.ArcGIS.Geodatabase.IWorkspace,ESRI.ArcGIS.Geodatabase.ITable,ESRI.ArcGIS.Geodatabase.IFields)">
            <summary>
            Upgrade a table to add any new fields
            </summary>
            <param name="ipWorkspace">The workspace containing the table</param>
            <param name="ipTable">The table to upgrade</param>
            <param name="ipExpectedFields">List of fields the table should contain</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt a byte array into a byte array using a key and an IV 
            </summary>
            <param name="clearData">The unencrypted byte array</param>
            <param name="Key">The key</param>
            <param name="IV">The IV</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.Encrypt(System.String,System.String)">
            <summary>
            Encrypt a byte array using a password
            </summary>
            <param name="clearText">The unencrypted byte array</param>
            <param name="Password">The password string to use to encode the data</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt a byte aray using a key and an IV
            </summary>
            <param name="cipherData">The encrypted data</param>
            <param name="Key">The key to use to decrypt</param>
            <param name="IV">The IV</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.Decrypt(System.String,System.String)">
            <summary>
            Decrypt a byte array using a password
            </summary>
            <param name="cipherText">The encrypted data</param>
            <param name="Password">The password to use to decrypt</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.ExecutionTypeToString(ESRI.ArcGIS.JTX.jtxExecutionType)">
            <summary>
            Get the string description of the Execution Type
            </summary>
            <param name="jtxExecutionType">The execution type</param>
            <returns>String description</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.StepTypePlatformToString(ESRI.ArcGIS.JTX.jtxStepTypePlatform)">
            <summary>
            Gets the string description of the Step Type Platform
            </summary>
            <param name="jtxStepTypePlatform">The step type platform</param>
            <returns>String description</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetDefaultProductCode">
            <summary>
            Get the default product code to check out when starting ArcGIS Workflow Manager
            </summary>
            <returns>The product code that is selected as the default product</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.SetExtensionState(ESRI.ArcGIS.Framework.IApplication,System.String,ESRI.ArcGIS.esriSystem.esriExtensionState)">
            <summary>
            Enable/disable an Extension
            </summary>
            <param name="pApp">The application to enable the extension within</param>
            <param name="strCLSID">The CLSID of the extension to enable/disable</param>
            <param name="state">The state to set the extension to</param>
            <returns>A boolean indicating whether the state changed</returns>
            <exception cref="T:System.Exception">Thrown when the extension's state is not changed</exception>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetJTXLogLevel">
            <summary>
            Returns the log level
            </summary>
            <returns>The integer log level</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.StoreConnProp(ESRI.ArcGIS.esriSystem.IPropertySet,ESRI.ArcGIS.JTX.IJTXDatabase)">
            <summary>
            Store the basic connection properties in the registry so they can be
            used as the defaults the next time the user creates a connection
            </summary>
            <param name="pProps">The property set containing the connection properties to store</param>
            <param name="pDB">The database used to log any error messages</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.RetrieveConnProps(ESRI.ArcGIS.JTX.IJTXDatabase)">
            <summary>
            Update the property set with the stored connection properties contained in the registry
            </summary>
            <param name="pDB">The database used to log any error messages</param>
            <returns>The property set containing the connection information</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.SetLocale">
            <summary>
            Sets up the locale
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.InvokeHelp">
            <summary>
            Invoke locale specific help
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.GetLiteralMarker(ESRI.ArcGIS.Geodatabase.IWorkspace)">
            <summary>
            Get national character string literal marker specific to the database we are connected to
            </summary>
            <returns>A string containing the database-specific national character literal prefix</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.IsServer">
            <summary>
            Determine whether WMX is being run in server or on desktop
            </summary>
            <returns>A boolean indicating whether WMX is running on server</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType">
            <summary>
            Well-known component categories for JTX customization items
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType.CustomSteps">
            <summary>Component category for IJTXCustomStep</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType.JobCallbacks">
            <summary>Deprecated</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType.SpatialNotifiers">
            <summary>Component category for IJTXSpatialNotifier</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.JTXUtilities.JTXCATIDType.SpatialNotifierEditors">
            <summary>Component category for IJTXSpatialNotifierForm</summary>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.MXDUtilities">
            <summary>
            Static methods to help when working with Workflow Manager MXDs
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.MXDUtilities.RepointSource(ESRI.ArcGIS.JTX.IJTXDatabase2,ESRI.ArcGIS.Geodatabase.IWorkspace,ESRI.ArcGIS.Carto.IMap,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Static method to repoint layers with an IMap to a new workspace
            </summary>
            <param name="database">WMX database</param>
            <param name="newWS">The destination workspace the layers should be connected to</param>
            <param name="map">The map to repoint layers within</param>
            <param name="bChangeVersion">Flag to determine whether the version will be changed</param>
            <param name="bSwitchDataWorkspace">Flag to determine if the data workspace will be changed</param>
            <param name="bChangeUser">Flag to determine if the user will be changed</param>
            <returns>A bool indicating whether the all layers were re-pointed successfully</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.MXDUtilities.RepointSource(ESRI.ArcGIS.JTX.IJTXDatabase2,ESRI.ArcGIS.Geodatabase.IWorkspace,ESRI.ArcGIS.Carto.IMap,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Static method to repoint layers with an IMap to a new workspace
            </summary>
            <param name="database">WMX database</param>
            <param name="newWS">The destination workspace the layers should be connected to</param>
            <param name="map">The map to repoint layers within</param>
            <param name="bChangeVersion">Flag to determine whether the version will be changed</param>
            <param name="bSwitchDataWorkspace">Flag to determine if the data workspace will be changed</param>
            <param name="bChangeUser">Flag to determine if the user will be changed</param>
            <param name="bFireEvents">Flag to determine if the FireChangeFeatureClass and FireChangeTable events are fired</param>
            <returns>A bool indicating whether the all layers were re-pointed successfully</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.MXDUtilities.SaveMXD(ESRI.ArcGIS.Framework.IApplication)">
            <summary>
            Static method to save the map document that is currently open in an IApplication
            </summary>
            <param name="application">The application to save the document</param>
            <returns>Integer indicating the user's response (1 = User chose not to save, 0 = Saved, -1 = Cancelled)</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.ErrorExtState">
            <summary>
              Looks up a localized string similar to Could not change the state of the extension.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.RegExtensions">
            <summary>
              Looks up a localized string similar to Software\ESRI\Desktop10.3\ArcMap\Extensions.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.RegTAMInstall">
            <summary>
              Looks up a localized string similar to SOFTWARE\ESRI\Applications\Desktop10.3\Task Assistant.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.TAMHistoryError">
            <summary>
              Looks up a localized string similar to Error retrieving Task Assistant history information.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.TAMNotInitialized">
            <summary>
              Looks up a localized string similar to Error: Task Assistant is not initialized.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.UnableToConnectAGOL">
            <summary>
              Looks up a localized string similar to Unable to connect to {0}.
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.Properties.Resources.UnableToFindActType">
            <summary>
              Looks up a localized string similar to Could not find activity type.
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.ReflectionUtilities">
            <summary>
            Static class containing utility methods for loading Workflow Manager classes and assemblies via reflection
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.ReflectionUtilities.LoadAssemblyFromFile(System.String,System.String)">
            <summary>
            Load assembly object from file
            </summary>
            <param name="strAssemblyFilePath">Full assembly file path</param>
            <param name="strFullTypeName">Fully qualified class type name</param>
            <returns>The assembly</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.ReflectionUtilities.LoadAssemblyFromGAC(System.String,System.String)">
            <summary>
            Loads assembly object from GAC
            </summary>
            <param name="strAssemblyName">Name of the assembly</param>
            <param name="strFullTypeName">Fully qualified class type name</param>
            <returns>The assembly</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.ReflectionUtilities.IsAssemblyAvailable(System.String)">
            <summary>
            Determines if an assembly exists on the system and can be loaded
            </summary>
            <param name="assemblyPath">Path to the .NET assembly</param>
            <returns>Does assembly exist?</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.ReflectionUtilities.GetRuntimeAssembly(System.String)">
            <summary>
            Returns a dynamic runtime instance of an assembly
            </summary>
            <param name="assemblyPath">Full path to the assembly</param>
            <returns>The RuntimeAssembly</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.StepUtilities">
            <summary>
            Static class containing utility methods for working with steps
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.GetArgument(System.Object[]@,System.String,System.Boolean,System.String@)">
            <summary>
            Extracts a CLI argument value from the list of arguments
            </summary>
            <param name="args">Complete array of arguments passed in from the CLI</param>
            <param name="strArgName">Argument to fetch a value for</param>
            <param name="bStripQuotes">Should quotes be stripped from the return value?</param>
            <param name="strArgValue">Output parameter for the returned argument value</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.GetArguments(System.Object[]@,System.String,System.Boolean,System.String[]@)">
            <summary>
            Extracts a CLI argument value from the list of arguments
            </summary>
            <param name="args">Complete array of arguments passed in from the CLI</param>
            <param name="strArgName">Argument to fetch a value for</param>
            <param name="bStripQuotes">Should quotes be stripped from the return value?</param>
            <param name="strArgValues">Output parameter for the returned argument value</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.GetDoubleArguments(System.Object[]@,System.String,System.Boolean,System.String[]@,System.String[]@)">
            <summary>
            Extracts multiple values from CLI arguments
            </summary>
            <param name="ArgList">Complete array of arguments passed in from the CLI</param>
            <param name="strArgName">Argument to fetch a value for</param>
            <param name="bStripQuotes">Should quotes be stripped from the return value?</param>
            <param name="strArgValueNames"></param>
            <param name="strArgValueValues"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.ParseArgument(System.String,System.String@,System.String@)">
            <summary>
            Parses the argument name and value from a CLI argument string
            </summary>
            <param name="strArgument">Complete CLI argument string</param>
            <param name="strArgName">Output argument name</param>
            <param name="strArgValue">Output argument value</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.AreArgumentNamesValid(System.Object[]@,System.String[])">
            <summary>
            Compares a list of user input arguments with a list of valid arguments
            and determines if the user input valid arguments or not
            </summary>
            <param name="argv">List of user's input arguments</param>
            <param name="validArgs">List of valid arguments</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.SplitArguments(System.String)">
            <summary>
            Splits a single CLI argument string into a string array
            </summary>
            <param name="strArgs">Complete CLI argument string</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.CreateFlagArgument(System.String)">
            <summary>
            Creates a flag argument string
            </summary>
            <param name="strName">Name of the flag</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.CreateSingleArgument(System.String,System.String)">
            <summary>
            Creates a single argument string
            </summary>
            <param name="strName">Name of the argument</param>
            <param name="strValue">Value of the argument</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.StepUtilities.CreateDoubleArgument(System.String,System.String,System.String)">
            <summary>
            Creates a double argument string
            </summary>
            <param name="strName">Name of the argument</param>
            <param name="strParamName">Parameter name</param>
            <param name="strParamValue">Parameter value</param>
            <returns></returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.SystemUtilities">
            <summary>
            Static class containing utility methods for interacting with the user's OS or base esriSystem functionality
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.OpenFileUsingOpenWithDialog(System.String)">
            <summary>
            Opens a file using the Windows built-in "Open With..." dialog
            </summary>
            <param name="file">Full file path of the file to open</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.PropertySetToDictionary(ESRI.ArcGIS.esriSystem.IPropertySet)">
            <summary>
            Converts an ESRI.System.PropertySet into a .NET dictionary
            </summary>
            <param name="propSet"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.LoadFileIcon(System.String)">
            <summary>
            Loads the bitmap icon of a file's associated OS application
            </summary>
            <param name="strFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.ConvertTextToValue(System.String,ESRI.ArcGIS.Geodatabase.esriFieldType,System.Object@)">
            <summary>
            Converts a text value into its actual field type equivalent
            </summary>
            <param name="strText"></param>
            <param name="fieldType"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.TypeFromFieldType(ESRI.ArcGIS.Geodatabase.esriFieldType)">
            <summary>
            Converts a geodatabase field type into an equivalent .NET type
            </summary>
            <param name="eFieldType"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.GetCOMToolbarItem(System.String)">
            <summary>
            Loads a COM toolbar item from a CLSID
            </summary>
            <param name="strClassID"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.GetDotNetToolbarItem(System.String,System.String)">
            <summary>
            Returns a .NET toolbar object from an assembly and class name
            </summary>
            <param name="assembly">Assembly name containing the toolbar item</param>
            <param name="className">The name of the toolbar item class</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.CreateComponentCategory(System.String,ESRI.ArcGIS.esriSystem.UID)">
            <summary>
            Creates a new COM component category
            </summary>
            <param name="strName">Category Name</param>
            <param name="uid">Category UID</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.GetTemporaryFileLocation(System.String,System.String)">
            <summary>
            Generate a temporary file location using the system's temporary path
            environment variable
            </summary>
            <param name="strFile">Name of the temporary file (without extension)</param>
            <param name="strNewExtension">Extension of the temporary file</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.ChangeEnvironmentVariable(System.String,System.Object)">
            <summary>
            Changes the value of an environment variable at the system level
            </summary>
            <param name="envvar">Name of the environment variable to change</param>
            <param name="value">New value of the environment variable</param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.GetUsernameAndToken(System.String@,System.String@,System.Int32)">
            <summary>
            Gets the current username and token. If the user is not currently logged in, they will be prompted to login
            </summary>
            <param name="username">The username of the currently logged in user</param>
            <param name="token">The token of the currently logged in user</param>
            <param name="hParentHWND">The handle of the parent window to attach the login dialog to</param>
            <returns>A boolean indicating whether the user is now logged in</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.SystemUtilities.GetUsernameAndToken(System.String@,System.String@,System.Int32,System.Boolean)">
            <summary>
            Gets the current username and token. If the user is not currently logged in, they will be prompted to login
            </summary>
            <param name="username">The username of the currently logged in user</param>
            <param name="token">The token of the currently logged in user</param>
            <param name="hParentHWND">The handle of the parent window to attach the login dialog to</param>
            <param name="bForceTryLogin">Always prompt the user for their login, even if they already have been prompted</param>
            <returns>A boolean indicating whether the user is now logged in</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.TAMUtilities">
            <summary>
            Task Assistant Utility Class
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.GetTAMInstallPath">
            <summary>
            Returns the directory path where Task Assistant is installed
            </summary>
            <returns>The path where TAM is installed</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.GetTAMBinPath">
            <summary>
            Returns the 'bin' directory for Task Assistant
            </summary>
            <returns>The path where TAM binaries are located</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.GetTAHistory(ESRI.ArcGIS.Framework.IApplication)">
            <summary>
            Retrieves the Task Assistant history
            </summary>
            <param name="app">The IApplication containing the TAM dockable window</param>
            <returns>The String of the TAM history</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.GetTAHistoryCollection(ESRI.ArcGIS.Framework.IApplication)">
            <summary>
            Retrieves the Task Assistant history
            </summary>
            <param name="app">The IApplication containing the TAM dockable window</param>
            <returns>The StringCollection of the TAM History</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.WaitUntilTALoaded(ESRI.ArcGIS.Framework.IApplication)">
            <summary>
            Waits until Task Assistant is fully loaded and ready to handle requests
            </summary>
            <param name="app">The IApplication containing the TAM dockable window</param>
            <returns>A boolean indicating whether this was successfull</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.LoadTAWorkflow(ESRI.ArcGIS.Framework.IApplication,System.String)">
            <summary>
            Loads the specified task assistant workflow into the host application
            </summary>
            <param name="app">The IApplication containing the TAM dockable window</param>
            <param name="taWorkflowPath">The task assistant XML to load</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.StoreAsAttachment(ESRI.ArcGIS.Framework.IApplication,ESRI.ArcGIS.JTX.IJTXJob,ESRI.ArcGIS.JTX.IJTXConfiguration)">
            <summary>
            Store the TAM history as an attachment to the specified job
            </summary>
            <param name="ipApp">The IApplication containing the TAM dockable window</param>
            <param name="pJob">The job to attach the history to</param>
            <param name="pJTXConfig">The workflow manager configuration manager</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.StoreInJobHistory(ESRI.ArcGIS.Framework.IApplication,ESRI.ArcGIS.JTX.IJTXJob,ESRI.ArcGIS.JTX.IJTXConfiguration)">
            <summary>
            Store the TAM history as records within the job history log
            </summary>
            <param name="ipApp">The IApplication containing the TAM dockable window</param>
            <param name="pJob">The job to store the TAM history within</param>
            <param name="pJTXConfig">The workflow manager configuration manager</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.SetTAMExtensionState(ESRI.ArcGIS.Framework.IApplication,ESRI.ArcGIS.esriSystem.esriExtensionState)">
            <summary>
            Enable/disable the TAM extension
            </summary>
            <param name="pApp">The application to enable the extension within</param>
            <param name="state">The state to set the extension to</param>
            <returns>A boolean indicating whether the state changed</returns>
            <exception cref="T:System.Exception">Thrown when the extension's state is not changed</exception>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMUtilities.GetTAMExtension(ESRI.ArcGIS.Framework.IApplication)">
            <summary>
            Get the Task Assistant extension
            </summary>
            <param name="pApp">The application to get the extension from</param>
            <returns>The Task Assistant extension</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.TAMClassType">
            <summary>
            Task Assistant Class Type
            </summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_ARCGIS_COMMANDPARAMS">
            <summary>CommandParams assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_ARCGIS_COMMON">
            <summary>ArcGIS common assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_ARCMAP">
            <summary>ArcMap assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_ARCMAP_DOCKABLEWINDOW">
            <summary>Dockable window assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_ARCMAP_STEPEXECUTION">
            <summary>Step execution assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_STEPDESIGNER">
            <summary>Step designer assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_STEPINFO">
            <summary>Step information assembly</summary>
        </member>
        <member name="F:ESRI.ArcGIS.JTX.Utilities.TAMClassType.SDK_TASKASSISTANTCONTROL">
            <summary>TAM control assembly</summary>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.TAMInstanceManager">
            <summary>
            Singleton manager for Task Assistant reflection management
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMInstanceManager.GetInstance(ESRI.ArcGIS.JTX.Utilities.TAMClassType)">
            <summary>
            Returns singleton instance of Task Assistant runtime assembly
            </summary>
            <param name="classType">Class type of the assembly to load</param>
            <returns>The RuntimeAssembly object for the specified assembly</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TAMInstanceManager.TAMClassTypeToString(ESRI.ArcGIS.JTX.Utilities.TAMClassType)">
            <summary>
            Converts the TAM class type to its string equivalent
            </summary>
            <param name="classType">The class type to find the string for</param>
            <returns>The string representation of the class type</returns>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.TAMInstanceManager.IsTaskAssistantInstalled">
            <summary>
            Checks whether or not task assistant is installed
            </summary>
        </member>
        <member name="P:ESRI.ArcGIS.JTX.Utilities.TAMInstanceManager.IsDesigner">
            <summary>
            Checks whether the installed TAM product is User or Designer
            </summary>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.TextUtilities">
            <summary>
            Static class containing utility methods used to parse and format text.
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ParseQAResponseStream(System.String)">
            <summary>
            Parses the answer text field for the 'Ask Question' step types (as it is stored in the database)
            </summary>
            <param name="responseStream"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ConvertListToCommaDelimitedString``1(System.Collections.Generic.List{``0})">
            <summary>
            Converts the items in a .NET collection to a command-delimited string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ConvertCommaDelimitedStringToList(System.String)">
            <summary>
            Converts a string of a comma-delimited list into a .NET collection object
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ConvertStringToStream(System.String)">
            <summary>
            Converts a .NET string into a System.IO.MemoryStream
            </summary>
            <param name="str">The string to convert</param>
            <returns>The System.IO.MemortyStream containing the string</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ConvertUTF8StringToStream(System.String)">
            <summary>
            Converted a .NET string into a System.IO.Stream
            </summary>
            <param name="str">The string to convert</param>
            <returns>The System.IO.Stream</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ConvertStreamToString(System.IO.Stream)">
            <summary>
            Converts a System.IO.Stream object into a .NET string
            </summary>
            <param name="stream">The System.IO.Stream to convert</param>
            <returns>The string contained in the stream</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.IsFilePathFormatValid(System.String)">
            <summary>
            Returns whether or not a file path contains invalid characters
            </summary>
            <param name="strPath">The path to examine to determine if it is valid</param>
            <returns>A boolean indicating whether the path is valid</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.ContainsInvalidCharacters(System.String)">
            <summary>
            Returns whether or not a string contains invalid characters:
            Typically related to invalid file characters
            </summary>
            <param name="str">The string to examine for invalide characters</param>
            <returns>A boolean indicating whether the string contained any invalid characters</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.StripQuotes(System.String)">
            <summary>
            Removes beginning and end quotes from a string
            </summary>
            <param name="strQuotes">The quoted string</param>
            <returns>The un-quoted string</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.VariantsToString(System.Object[])">
            <summary>
            Converts an array of variants to a single space-delimited string
            </summary>
            <param name="pVariants">The array of variants</param>
            <returns>The space-delimited string</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.TextUtilities.FormatArgDescription(System.String)">
            <summary>
            Format custom step argument description strings
            </summary>
            <remarks>
            This replaces newline characters (\r\n or \n) with a newline and tab characters (\t) with a tab
            </remarks>
            <param name="s">The string to format</param>
            <returns>The formatted string</returns>
        </member>
        <member name="T:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities">
            <summary>
            Static class containing utility methods for working with workflows
            </summary>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.CopyWorkflowXML(ESRI.ArcGIS.JTX.IJTXDatabase,ESRI.ArcGIS.JTX.IJTXJob)">
            <summary>
            Copy the XML representation of the workflow from the job type to the specified job
            </summary>
            <param name="pDatabase">The repository containing the job.</param>
            <param name="pJob">The job to update.</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.GetWorkflowXML(ESRI.ArcGIS.JTX.IJTXDatabase,ESRI.ArcGIS.JTX.IJTXJobType)">
            <summary>
            Gets the XML representation of the workflow for the specified job type.
            </summary>
            <param name="pDatabase">The repository containing the job type.</param>
            <param name="m_pJobType">The job type to retrieve the workflow XML from.</param>
            <returns>The string containing the XML representation of the workflow.</returns>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.ReplaceIDsInWorkflow(ESRI.ArcGIS.JTX.IJTXWorkflowConfiguration,System.Int32,ESRI.ArcGIS.JTX.IJTXWorkflowConfiguration,System.Int32,System.String@)">
            <summary>
            Replaces job type step IDs in the workflow with job-specific step IDs
            </summary>
            <param name="pWorkflowConfigOld">The job type workflow</param>
            <param name="lStepIDOld">The step ID in the old workflow to replace</param>
            <param name="pWorkflowConfigNew">The job workflow</param>
            <param name="lStepIDNew">The step ID to replace with in the new workflow</param>
            <param name="blobStr">The workflow XML</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.GenerateWorkflowXML(ESRI.ArcGIS.JTX.IJTXDatabase,ESRI.ArcGIS.JTX.IJTXJobType,ESRI.ArcGIS.JTX.IJTXJobSet)">
            <summary>
            Create the workflow XML for a set of jobs
            </summary>
            <param name="pDatabase">The repository containing the jobs.</param>
            <param name="pJobType">The job type to get the workflow XML from</param>
            <param name="pJobs">The set of jobs to generate the workflow XML for</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.GenerateWorkflowXML(ESRI.ArcGIS.JTX.IJTXDatabase,ESRI.ArcGIS.JTX.IJTXJob,ESRI.ArcGIS.JTX.IJTXJob)">
            <summary>
            Create the workflow XML for a single job based on an existing job
            </summary>
            <param name="pDatabase">The repository containing the jobs.</param>
            <param name="pBaseJob">The existing job containing the workflow XML</param>
            <param name="pJob">The job to generate the workflow XML for</param>
        </member>
        <member name="M:ESRI.ArcGIS.JTX.Utilities.WorkflowUtilities.AutoCommitWorkflow(ESRI.ArcGIS.JTX.IJTXDatabase)">
            <summary>
            Determines whether the repository is configured to automatically commit newly created jobs or not.
            </summary>
            <param name="pDB">The repository.</param>
            <returns>A boolean indicating whether jobs should be automatically committed.</returns>
        </member>
    </members>
</doc>
